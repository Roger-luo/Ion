"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/Ion/docs/intro","docId":"intro"},{"type":"link","label":"Installation","href":"/Ion/docs/install","docId":"install"},{"type":"category","label":"Commands References","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Julia Pkg Commands","href":"/Ion/docs/commands/pkg","docId":"commands/pkg"},{"type":"link","label":"Create a new package with pre-defined templates","href":"/Ion/docs/commands/new","docId":"commands/new"},{"type":"link","label":"Releasing a new version with Ion","href":"/Ion/docs/commands/release","docId":"commands/release"},{"type":"link","label":"Cloning the repository of a package","href":"/Ion/docs/commands/clone","docId":"commands/clone"},{"type":"link","label":"Authentication","href":"/Ion/docs/commands/auth","docId":"commands/auth"},{"type":"link","label":"Running Julia with Ion","href":"/Ion/docs/commands/script","docId":"commands/script"}],"href":"/Ion/docs/category/commands-references"},{"type":"category","label":"Developer Notes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"File organization","href":"/Ion/docs/dev/structure","docId":"dev/structure"}],"href":"/Ion/docs/category/developer-notes"}]},"docs":{"commands/auth":{"id":"commands/auth","title":"Authentication","description":"","sidebar":"tutorialSidebar"},"commands/clone":{"id":"commands/clone","title":"Cloning the repository of a package","description":"- Have you gotten annoyed that cloning a Julia package using git ends up in a folder with xxxx.jl by default?","sidebar":"tutorialSidebar"},"commands/new":{"id":"commands/new","title":"Create a new package with pre-defined templates","description":"- Have you ever typed the same project configuration again and again interactively with PkgTemplates?","sidebar":"tutorialSidebar"},"commands/pkg":{"id":"commands/pkg","title":"Julia Pkg Commands","description":"The Julia package manager is called Pkg. It is used to install, update, and remove packages, as well as to manage the versions of packages in your project. The Pkg module is part of the standard library and is always available.","sidebar":"tutorialSidebar"},"commands/release":{"id":"commands/release","title":"Releasing a new version with Ion","description":"This has been one of the most frequently used features personally in my previous Julia version, and in this new rust version, I have rewritten the whole thing in a much cleaner and modular fashion.","sidebar":"tutorialSidebar"},"commands/script":{"id":"commands/script","title":"Running Julia with Ion","description":"Run Julia with local environment --project by default","sidebar":"tutorialSidebar"},"dev/structure":{"id":"dev/structure","title":"File organization","description":"","sidebar":"tutorialSidebar"},"install":{"id":"install","title":"Installation","description":"The installation process is currently a bit manual, but we are working on making","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"Everything in Ion is optimized for terminal UX, including its name - ion is the easiest-to-type name that I find not used by other popular CLI tools.","sidebar":"tutorialSidebar"}}}')}}]);