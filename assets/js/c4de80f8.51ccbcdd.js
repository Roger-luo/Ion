"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[943],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=o,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2},i="Installation",l={unversionedId:"install",id:"install",title:"Installation",description:"The installation process is currently a bit manual, but we are working on making",source:"@site/docs/install.md",sourceDirName:".",slug:"/install",permalink:"/Ion/docs/install",draft:!1,editUrl:"https://github.com/Roger-luo/Ion/tree/main/website/docs/docs/install.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/Ion/docs/intro"},next:{title:"Commands References",permalink:"/Ion/docs/category/commands-references"}},s={},p=[{value:"Install from source",id:"install-from-source",level:2},{value:"Optional prerequisites",id:"optional-prerequisites",level:2},{value:"Shell auto-completion",id:"shell-auto-completion",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"installation"},"Installation"),(0,o.kt)("p",null,"The installation process is currently a bit manual, but we are working on making\nit easier."),(0,o.kt)("p",null,"You can download the pre-built binary from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Roger-luo/Ion/releases"},"releases page"),", there is only one binary inside each tarball, you can put it anywhere you want, and add it to your ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),". Usually you can just put it in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.local/bin")," and add ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.local/bin")," to your ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),"."),(0,o.kt)("h2",{id:"install-from-source"},"Install from source"),(0,o.kt)("p",null,"Ion is written in rust, so you need to have ",(0,o.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/learn/get-started"},"rust installed")," to build it from source."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/Roger-luo/Ion.git\ncd Ion\ncargo install --path .\n")),(0,o.kt)("p",null,"Or you can use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casey/just"},(0,o.kt)("inlineCode",{parentName:"a"},"just"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"just install\n")),(0,o.kt)("h2",{id:"optional-prerequisites"},"Optional prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git"),": some Ion commands requires git to be installed, such as using ",(0,o.kt)("inlineCode",{parentName:"li"},"ion new"),"\nto setup a new project with git repo."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"julia"),": Ion forwards Julia pkg commands to manage current ",(0,o.kt)("inlineCode",{parentName:"li"},"julia")," environment.\nIf you don't have ",(0,o.kt)("inlineCode",{parentName:"li"},"julia")," installed, Ion will still work, but you won't be able\nto use Julia pkg commands.")),(0,o.kt)("h2",{id:"shell-auto-completion"},"Shell auto-completion"),(0,o.kt)("p",null,"If you want to have shell auto-completion, after downloading ion, run ",(0,o.kt)("inlineCode",{parentName:"p"},"ion completions <shell>")," to generate the shell completion script, e.g for ",(0,o.kt)("inlineCode",{parentName:"p"},"oh-my-zsh")," you can copy and paste the following"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"cd .oh-my-zsh/completions\nion completions zsh |> _ion\n")),(0,o.kt)("p",null,"In the future, if this is adopted by more people, maybe we can have juliaup ship this or have an ionup for a friendlier installation process."))}m.isMDXComponent=!0}}]);